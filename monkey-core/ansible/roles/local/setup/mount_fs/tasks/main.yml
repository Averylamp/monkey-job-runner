---
  # tasks:
- name: Printout fs name
  debug:
    msg: "Mounting {{ storage_name}} to {{ local_monkeyfs_path }}"

    # TODO(alamp): Make more robust
- name: Check for existing mount
  shell: df {{ local_monkeyfs_path }} | grep "s3fs"
  register: existing_mount
  ignore_errors: true
- name: Printout mount
  debug:
    msg: "{{existing_mount.stdout}}"
- name: If no existing mount
  when: existing_mount is failed
  block:
    # TODO(alamp): Ensure this works on user paths and root paths
    - name: Create Mountpoint w/ Sudo
      become: true
      ignore_errors: true
      file:
        path: "{{ local_monkeyfs_path }}"
        state: directory
        owner: "{{ ansible_user }}"
      register: create_mountpoint
    - name: Create Mountpoint
      ignore_errors: true
      file:
        path: "{{ local_monkeyfs_path }}"
        state: directory
        owner: "{{ ansible_user }}"
      register: create_mountpoint
    - name: Debug Mountpoint
      debug:
        msg: "{{create_mountpoint.path}}"

    - name: Mount fs to Mountpoint
      when: create_mountpoint is not failed
      environment:
        "AWSACCESSKEYID": "{{access_key_id}}"
        "AWSSECRETACCESSKEY": "{{access_key_secret}}"
      command:
        cmd: "s3fs {{storage_name}} {{local_monkeyfs_path}}"

- name: Get Mount Path
  shell: df "{{ local_monkeyfs_path }}" | grep {{storage_name}} | awk '{print $NF}'
  register: mount_path

- name: Register Mount Path
  set_fact:
    mount_path: "{{ local_monkeyfs_path }}"
- name: Printout mount path
  debug:
    msg: "{{mount_path}}"
