---

- name: Remove existing key if found
  file:
    state: absent
    path: "{{ gcp_ssh_private_key_file | default('keys/gcp') }}"
  ignore_errors: yes
  register: existing_private

- name: Printout existing private
  debug:
    msg: "{{ existing_private }}"

- name: Switch GCP to service account and remove all keys
  block:
    - name: Store current gcloud account
      command: gcloud config get-value account
      register: prev_gcloud_account
    - name: Printout og gcloud account
      debug:
        msg: "Previous account: {{ prev_gcloud_account.stdout }}"
    - name: Switch to service account
      when: prev_gcloud_account.stdout != gcp_service_email
      command: "gcloud auth activate-service-account --key-file {{ gcp_cred_file }}"

    - name: Register new ssh key with service account os-login
      command: "gcloud compute os-login ssh-keys list"
      register: "gcloud_stored_key_fingerprints_raw"

    - name: Sets list fact
      set_fact:
        gcloud_key_fingerprints: "{{ gcloud_stored_key_fingerprints_raw.stdout_lines }}"
          

    - name: "Printout key fingerprints"
      debug:
        msg: "{{ gcloud_key_fingerprints }}"

    - name: Remove key
      command: "gcloud compute os-login ssh-keys remove --key='{{ item }}'"
      when: 
        - item.find('FINGERPRINT') == -1
        - item.find('Listed 0 items.') == -1
      with_items: "{{ gcloud_key_fingerprints }}"

    - name: "Printout key fingerprints"
      debug:
        msg: "Successfully removed {{ gcloud_key_fingerprints.count }} keys"

    - name: Switch back to old gcp account if needed
      when: 
       - prev_gcloud_account.stdout != gcp_service_email and prev_gcloud_account.stdout != ''
      command: "gcloud config set account {{ prev_gcloud_account.stdout }}"
      