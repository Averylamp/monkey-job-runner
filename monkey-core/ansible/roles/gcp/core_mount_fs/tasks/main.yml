---
  # tasks:
- name: Default fs name
  set_fact:
    gcp_storage_name: "{{ gcp_storage_name | default('monkeyfs', true) }}"
    gcp_project: "{{ (lookup('file', gcp_cred_file) | from_json).project_id }}"
- name: Printout fs name
  debug:
    msg: "Mounting FS: {{ gcp_storage_name }}"

    # TODO(alamp): Make more robust
- name: Check for existing mount
  shell: df | grep {{ gcp_storage_name }}
  register: existing_mount
  ignore_errors: true

- name: If no existing mount
  when: existing_mount is failed
  block:
    # TODO(alamp): Ensure this works on user paths and root paths
    - name: Create Mountpoint w/ Sudo
      become: true
      ignore_errors: true
      file:
        path: monkeyfs
        state: directory
        owner: "{{ ansible_user }}"
      register: create_mountpoint
    - name: Create Mountpoint
      ignore_errors: true
      file:
        path: monkeyfs
        state: directory
        owner: "{{ ansible_user }}"
      register: create_mountpoint
    - name: Debug Mountpoint
      debug:
        msg: "{{create_mountpoint.path}}"
    - name: Mount fs to Mountpoint
      when: create_mountpoint is not failed
      command:
        cmd: "gcsfuse monkeyfs {{create_mountpoint.path}}"
      environment:
        GOOGLE_APPLICATION_CREDENTIALS: "{{ gcp_cred_file }}"
- name: Get Mount Path
  shell: df | grep {{gcp_storage_name}} | awk '{print $NF}'
  register: mount_path
- name: Register Mount Path
  set_fact:
    mount_path: "{{ mount_path.stdout }}"
- name: Printout mount path
  debug:
    msg: "{{mount_path}}"