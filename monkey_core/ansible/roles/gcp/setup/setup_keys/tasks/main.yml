---
- name: Check for existing key
  file:
    state: file
    path: "keys/{{ gcp_key_name }}.pem"
  ignore_errors: yes
  register: existing_private

- name: Printout existing private
  debug:
    msg: "{{ existing_private }}"

- name: Set private key path
  set_fact:
    gcp_ssh_private_key_file:  "{{ existing_private.path }}"

- name: Generate private key, register with gcp for service account os-login
  when: existing_private.failed
  block:
    - name: Create openssh key
      openssh_keypair:
        path: "{{ existing_private.path }}"
        type: rsa
        size: 4096
        state: present
    - name: Store current gcloud account
      command: gcloud config get-value account
      register: prev_gcloud_account
      ignore_errors: true
    - name: Store current gcloud project
      command: gcloud config get-value project
      register: prev_gcloud_project
    - name: Printout og gcloud info
      debug:
        msg: "Previous account: {{ prev_gcloud_account.stdout }}, project: {{prev_gcloud_project.stdout}}"
    - name: Switch to service account
      when: prev_gcloud_account.stdout != gcp_service_email
      command: "gcloud auth activate-service-account --key-file {{ gcp_cred_file }}"
    - name: Switch to project
      command: "gcloud config set project {{gcp_project}}"
    - name: Register new ssh key with service account os-login
      command: "gcloud compute os-login ssh-keys add --key-file {{ gcp_ssh_private_key_file }}.pub"

    - name: Switch back to old gcp account if needed
      ignore_errors: true
      when: prev_gcloud_account.stdout != gcp_service_email
      command: "gcloud config set account {{ prev_gcloud_account.stdout }}"

    - name: Debug printout playbook
      debug:
        msg: "{{ playbook_dir }}"
    - name: Remove old ansible_user if existing
      lineinfile:
        dest: "{{ playbook_dir }}/inventory/group_vars/monkey_gcp.yml"
        create: yes
        state: absent
        regexp: "ansible_user"

    - name: Add ansible user to inventory file
      lineinfile:
        dest: "{{ playbook_dir }}/inventory/group_vars/monkey_gcp.yml"
        create: yes
        state: present
        line: "ansible_user: sa_{{ (lookup('file', gcp_cred_file) | from_json).client_id }}"
    - name: Add GCP private key to gcp_var file
      lineinfile:
        dest: "{{ playbook_dir }}/gcp_vars.yml"
        create: yes
        state: present
        line: "gcp_ssh_private_key_file: {{playbook_dir}}/{{ gcp_ssh_private_key_file }}"

    - name: Remove GCP private key from inventory if existing
      lineinfile:
        dest: "{{ playbook_dir }}/inventory/group_vars/monkey_gcp.yml"
        create: yes
        state: absent
        regexp: "ansible_ssh_private_key_file*"
    - name: Add ansible private key to inventory file
      lineinfile:
        dest: "{{ playbook_dir }}/inventory/group_vars/monkey_gcp.yml"
        create: yes
        state: present
        line: "ansible_ssh_private_key_file: {{playbook_dir}}/{{ gcp_ssh_private_key_file }}"
